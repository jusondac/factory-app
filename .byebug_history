c
prepare.all_ingredients_checked?
prepare
c
prepare.all_ingredients_checked?
 c
c
checked_ingredients_count
c
checked_ingredients
c
prepare.all_ingredients_checked?
prepare.all_ingredients_checked
prepare.checked_ingredients_count
prepare.prepare_ingredients.count
prepare.all_ingredients_checked?
prepare.all_ingredient_checked?
prepare.all_ingredient_checked
prepare
ingredient
c
ingredient
c
prepare.all_ingredients_checked?
prepare
 c
c
@prepare.status
service.start_checking
@prepare.status
service = PrepareCheckingService.new(prepare: @prepare, user: Current.user)
c
 c
c
@prepare_ingredients.count
_.count
@prepare_ingredients
c
prepare_ingredients.count
prepare_ingredients.all.pluck(:checked).count
prepare_ingredients.all.pluck(:checked)
prepare_ingredients.all
prepare_ingredients.all?
prepare_ingredients.present? && prepare_ingredients.all?(&:checked)
c
prepare_ingredients.all?(&:checked)
prepare_ingredients.all>(&:checked)
prepare_ingredients.all
prepare_ingredients.present?
prepare_ingredients.present? && prepare_ingredients.all?(&:checked)
   75:     prepare_ingredients.present? && prepare_ingredients.all?(&:checked)
c
@prepare
c
@prepare.checking?
@prepare.status
@prepare
c
Current.user
Current
c
Current.user
c
Current.user
Current
